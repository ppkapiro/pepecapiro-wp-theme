name: Workflow Runs Summary

on:
  workflow_dispatch:
    inputs:
      workflow:
        description: 'Nombre del workflow a filtrar (vacío = todos)'
        required: false
        default: ''
      limit:
        description: 'Número máximo de runs listados por workflow'
        required: true
        default: '40'

jobs:
  summary:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    steps:
      - name: Generar resumen
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          WF_NAME="${{ github.event.inputs.workflow }}"
          LIMIT="${{ github.event.inputs.limit }}"
          if [ -z "${LIMIT}" ]; then LIMIT=40; fi
          echo "[INFO] Repositorio: $GITHUB_REPOSITORY" >&2
          echo "[INFO] Filtro workflow: '${WF_NAME:-*}' (vacío=todos)" >&2
          echo "[INFO] Límite por workflow: ${LIMIT}" >&2
          # Obtener todas las runs (paginación) y consolidar en un único array
          if ! gh api -X GET \
            "/repos/${GITHUB_REPOSITORY}/actions/runs" \
            --paginate -F per_page=100 -q '.workflow_runs[]' | jq -s '.' > runs_all.json; then
            echo "[]" > runs_all.json
            echo "[WARN] gh api falló o sin datos; se genera lista vacía" >&2
          fi
          # Filtrar por nombre si se proporcionó
          if [ -n "$WF_NAME" ]; then
            jq --arg N "$WF_NAME" '[ .[] | select(.name==$N) ]' runs_all.json > runs_filtered.json
          else
            cp runs_all.json runs_filtered.json
          fi
          # Agrupar y truncar listado
          jq --argjson L "$LIMIT" '
            group_by(.name) |
            map({
              name: .[0].name,
              total: length,
              listed: (sort_by(.created_at) | reverse | .[0:$L] | map({
                id, run_number, status, conclusion, created_at, event,
                actor: .actor.login
              }))
            })
          ' runs_filtered.json > summary.json
          # Generar markdown
          {
            echo "# Workflow Runs Summary";
            echo "Repositorio: $GITHUB_REPOSITORY";
            echo "Generado: $(date -u +%Y-%m-%dT%H:%M:%SZ)"; echo;
            jq -r '.[] | "## \(.name) (total: \(.total))\n" + ( .listed[]? | "- #\(.run_number) id=\(.id) status=\(.status) conclusion=\(.conclusion) created=\(.created_at) event=\(.event) actor=\(.actor)" ) + "\n"' summary.json;
          } > summary.md
      - name: Subir artefacto
        uses: actions/upload-artifact@v4
        with:
          name: workflow-runs-summary
          path: |
            runs_all.json
            runs_filtered.json
            summary.json
            summary.md
